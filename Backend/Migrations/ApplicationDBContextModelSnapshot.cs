// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Cart", b =>
                {
                    b.Property<int>("cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cid"));

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<int?>("userUid")
                        .HasColumnType("int");

                    b.HasKey("cid");

                    b.HasIndex("userUid");

                    b.ToTable("_cart");
                });

            modelBuilder.Entity("Backend.Models.Category", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cid"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Cid");

                    b.ToTable("_category");
                });

            modelBuilder.Entity("Backend.Models.Item", b =>
                {
                    b.Property<int>("Iid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iid"));

                    b.Property<int?>("Cartcid")
                        .HasColumnType("int");

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Iid");

                    b.HasIndex("Cartcid");

                    b.HasIndex("Cid");

                    b.ToTable("_item");
                });

            modelBuilder.Entity("Backend.Models.Order", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"));

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<int?>("cartcid")
                        .HasColumnType("int");

                    b.Property<int?>("userUid")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.HasIndex("cartcid");

                    b.HasIndex("userUid");

                    b.ToTable("_order");
                });

            modelBuilder.Entity("Backend.Models.User_Other_Info", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("_user_other_info");
                });

            modelBuilder.Entity("Backend.Models.User_detail", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserOtherInfoEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Uid");

                    b.HasIndex("UserOtherInfoEmail");

                    b.ToTable("_user_detail");
                });

            modelBuilder.Entity("Backend.Models.Cart", b =>
                {
                    b.HasOne("Backend.Models.User_detail", "user")
                        .WithMany()
                        .HasForeignKey("userUid");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Backend.Models.Item", b =>
                {
                    b.HasOne("Backend.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("Cartcid");

                    b.HasOne("Backend.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Backend.Models.Order", b =>
                {
                    b.HasOne("Backend.Models.Cart", "cart")
                        .WithMany("orders")
                        .HasForeignKey("cartcid");

                    b.HasOne("Backend.Models.User_detail", "user")
                        .WithMany("orders")
                        .HasForeignKey("userUid");

                    b.Navigation("cart");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Backend.Models.User_detail", b =>
                {
                    b.HasOne("Backend.Models.User_Other_Info", "UserOtherInfo")
                        .WithMany()
                        .HasForeignKey("UserOtherInfoEmail");

                    b.Navigation("UserOtherInfo");
                });

            modelBuilder.Entity("Backend.Models.Cart", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Backend.Models.User_detail", b =>
                {
                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
